# -*- coding: utf-8 -*-
"""Algoritmos de Ordenação.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h9YubPaRqugySZ6otD5WATUEdausdYSb

# **Algoritmos Elementares**
@author: Lariza Laura de Oliveira
"""

############################### Ordenação por Inserção ############################################


# Declarando a Função no Python
def insertionSort(vetor): 
  
 
    for i in range(1, len(vetor)): 
  
        chave = vetor[i] 
  
        # Move os elementos do vetor[0..i-1], que são maiores que a chave
        j = i-1
        while j >=0 and chave < vetor[j] : 
                vetor[j+1] = vetor[j] 
                j -= 1
        vetor[j+1] = chave 
  
  
# Vamos testar
vetor = [20, 11, 15, 5, 6, 2, 1, 4, 7] 
insertionSort(vetor) 
print ("Sorted array is:") 
for i in range(len(vetor)): 
    print ("%d" %vetor[i])

############################### Ordenação por Seleção ############################################

 # Declarando a Função no Python
def selectionSort(vetor): 
 
  for i in range(len(vetor)): 
        
      # Encontre o menor elemento na porção ainda não ordenada do vetor 
      indice_menor = i 
      for j in range(i+1, len(vetor)): 
          if vetor[j] < vetor[indice_menor]: 
              indice_menor = j 
                
      # Troque o menor elemento encontrado com o primeiro elemento     
      vetor[i], vetor[indice_menor] = vetor[indice_menor], vetor[i] 

  
# Vamos testar
vetor = [20, 11, 15, 5, 6, 2, 1, 4, 7]
selectionSort(vetor)
print ("Vetor ordenado") 
for i in range(len(vetor)): 
    print("%d" %vetor[i]),
